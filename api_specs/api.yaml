openapi: 3.0.2

info:
  title: FindAz
  version: "1.2"
  description: just for fun marketplace like yandex market, aliexpress and etc

tags:
  - name: Products
    description: Products endpoints
  - name: Product Images
    description: Endpoint for Images

servers:
  - url: http://127.0.0.1:8080
    description: local server only for development

paths:
  /{file}:
    get:
      operationId: "app.controllers.get_image"
      tags:
        - Product Images
      summary: get Image by filename
      parameters:
        - name: file
          in: path
          description: filename of image
          schema:
            type: string
          required: true
      responses:
        200:
          description: returns image file
          content:
            image/gif:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary

  /api/product/{id}:
    delete:
      operationId: "app.controllers.product.controller.delete_product"
      tags:
        - Products
      summary: Delete product by id
      parameters:
        - name: id
          in: path
          description: product id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        204:
          description: No Content
    get:
      operationId: "app.controllers.product.controller.get_product"
      tags:
        - Products
      summary: Get product by id
      parameters:
        - name: id
          in: path
          description: product id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: info about product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productResponseSchema'
    
    put:
      operationId: "app.controllers.product.controller.change_product"
      tags:
        - Products
      summary: Change product by id
      parameters:
        - name: id
          in: path
          description: product id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productRequestBodySchema'
      responses:
        200:
          description: update info about product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productResponseSchema'
  
  /api/product/{id}/images:
    put:
      operationId: "app.controllers.product.controller.change_product_images"
      tags:
        - Products
      summary: Set or change product images
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
      
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/productImagesSchema"
                
      responses:
        200:
          description: returns josn with images url
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    $ref: "#/components/schemas/productImagesSchema"

  /api/product:
    get:
      operationId: "app.controllers.product.controller.get_products"
      tags:
        - Products
      summary: Get list of products
      parameters:
        - in: query
          name: product_title
          schema:
            type: string
        - in: query
          name: product_owner
          schema:
            type: string
        - in: query
          name: product_count
          schema:
            type: integer
      responses:
        200:
          description: info about products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productResponseSchema'

    post:
      operationId: "app.controllers.product.controller.add_product"
      tags:
        - Products
      summary: Add new product
      requestBody:
        description: add new product
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productRequestBodySchema'
                    
      responses:
        201:
          description: new product was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productResponseSchema'

components:
  schemas:
    productResponseSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
        create_date:
          type: string
          format: date-time
        edit_date:
          type: string
          format: date-time
        product_title:
          type: string
        product_owner:
          type: string
        product_count:
          type: integer
        product_properties:
          type: object
          additionalProperties: true

    productRequestBodySchema:
      type: object
      properties:
        product_title:
          type: string
        product_owner:
          type: string
        product_count:
          type: integer
        product_properties:
          type: object
          additionalProperties: true
    
    productImagesSchema:
      type: object
      properties:
        main_image:
          type: string
          format: binary
        image_1:
          type: string
          format: binary
        image_2:
          type: string
          format: binary
        image_3:
          type: string
          format: binary
        image_4:
          type: string
          format: binary
        image_5:
          type: string
          format: binary
        image_6:
          type: string
          format: binary
        image_7:
          type: string
          format: binary
        image_8:
          type: string
          format: binary
        image_9:
          type: string
          format: binary
        image_10:
          type: string
          format: binary
      required:
        - "main_image"
